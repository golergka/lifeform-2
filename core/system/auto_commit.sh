#!/bin/bash
# Automatic git commit script for lifeform-2
# This script commits all changes made during a session when run.sh is completed
# The commit message should be manually generated by Claude during the session

# Load error utilities
source "$(dirname "$0")/error_utils.sh"

# Script name for logging
SCRIPT_NAME="auto_commit.sh"

# Function to check if there are any changes to commit
check_for_changes() {
  log_info "Checking for changes to commit..." "$SCRIPT_NAME"
  
  # Check if git is available
  if ! command -v git &> /dev/null; then
    log_error "Git command not found" "$SCRIPT_NAME"
    return 1
  fi
  
  # Check if we're in a git repository
  if ! git rev-parse --is-inside-work-tree &> /dev/null; then
    log_error "Not in a git repository" "$SCRIPT_NAME"
    return 1
  fi
  
  # Check for changes
  if [ -z "$(git status --porcelain)" ]; then
    log_info "No changes to commit" "$SCRIPT_NAME"
    return 1
  fi
  
  return 0
}

# Function to commit changes
commit_changes() {
  # Check if there are changes to commit
  if ! check_for_changes; then
    return 0
  fi
  
  log_info "Committing changes" "$SCRIPT_NAME"
  
  # Add all changes
  safe_exec "git add ." "Failed to add changes to git staging" "$SCRIPT_NAME" || return 1
  
  # Commit changes - Note: Claude should generate descriptive commits during the session
  # This is only a fallback for changes made after Claude completes
  safe_exec "git commit -m \"chore: auto-commit remaining changes after session

ðŸ¤– Generated with [Claude Code](https://claude.ai/code)
Co-Authored-By: Claude <noreply@anthropic.com>\"" "Failed to commit changes" "$SCRIPT_NAME" || return 1
  
  log_info "Changes committed successfully" "$SCRIPT_NAME"
  return 0
}

# Function to push changes
push_changes() {
  log_info "Pushing changes to remote repository..." "$SCRIPT_NAME"
  
  # Check if there's a remote repository
  if ! git remote -v | grep -q origin; then
    log_warning "No remote repository found, skipping push" "$SCRIPT_NAME"
    return 0
  fi
  
  # Push changes
  safe_exec "git push" "Failed to push changes to remote repository" "$SCRIPT_NAME" || return 1
  
  log_info "Changes pushed successfully" "$SCRIPT_NAME"
  return 0
}

# Main execution - extremely simplified as requested by creator
main() {
  local do_push=false
  
  # Parse command line arguments
  if [[ "$1" == "--push" ]]; then
    do_push=true
  fi
  
  # Commit changes
  commit_changes || exit 1
  
  # Push changes if requested
  if $do_push; then
    push_changes || exit 1
  fi
  
  exit 0
}

# Run the main function
main "$@"